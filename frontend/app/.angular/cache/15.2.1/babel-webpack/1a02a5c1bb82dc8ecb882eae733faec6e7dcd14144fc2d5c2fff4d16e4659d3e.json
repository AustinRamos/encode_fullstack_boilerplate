{"ast":null,"code":"import _asyncToGenerator from \"/Users/austinramos/Documents/Workspace/Encode_Bootcamp/14_15_code/frontend/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ethers } from 'ethers';\nlet AppComponent = class AppComponent {\n  constructor() {\n    this.blockNumber = 0;\n    //this.provider = ethers.getDefaultProvider('goerli');\n    this.provider = new ethers.providers.Web3Provider(window.ethereum);\n    //setInterval(()=>{this.blockNumber +=1 })\n  }\n\n  syncBlock() {\n    //this.blockNumber = \"loading...\";\n    this.provider.getBlock(\"latest\").then(block => {\n      this.blockNumber = block.number;\n      this.transactions = block.transactions;\n    });\n  }\n  // createWallet(){\n  //   this.userWallet = ethers.Wallet.createRandom().connect(this.provider);\n  //   this.userWallet.getBalance().then(bal=>{\n  //     this.userEthBalance = parseFloat(ethers.utils.formatEther(bal));\n  //   })\n  // }\n  handleAuth() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      console.log(\"HANDLE AUTH***\");\n      window.ethereum.enable();\n      _this.provider.send(\"eth_requestAccounts\", []);\n      console.log(\"CONNECTED!\");\n      console.log(\"provider: \", _this.provider);\n      const signer = yield _this.provider.getSigner();\n      _this.userWallet = signer;\n      //const test = signer.connect(this.provider)\n      //console.log(\"Account:\", await signer.getAddress());\n    })();\n  }\n\n  clearBlock() {\n    this.blockNumber = 1;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAQC,MAAM,QAAe,QAAQ;AAQ9B,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAOvBC;IALA,gBAAW,GAAW,CAAC;IAMpB;IACA,IAAI,CAACC,QAAQ,GAAG,IAAIH,MAAM,CAACI,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;IAElE;EACD;;EAEAC,SAAS;IACP;IACF,IAAI,CAACL,QAAQ,CAACM,QAAQ,CAAC,QAAQ,CAAC,CAACC,IAAI,CAACC,KAAK,IAAE;MAC3C,IAAI,CAACC,WAAW,GAAGD,KAAK,CAACE,MAAM;MAC/B,IAAI,CAACC,YAAY,GAAGH,KAAK,CAACG,YAAY;IAExC,CAAC,CAAC;EACF;EAEA;EACA;EACA;EACA;EACA;EACA;EAEMC,UAAU;IAAA;IAAA;MACdC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7BX,MAAM,CAACC,QAAQ,CAACW,MAAM,EAAE;MACxB,KAAI,CAACf,QAAQ,CAACgB,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MAC7CH,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzBD,OAAO,CAACC,GAAG,CAAC,YAAY,EAAG,KAAI,CAACd,QAAQ,CAAC;MACzC,MAAMiB,MAAM,SAAS,KAAI,CAACjB,QAAQ,CAACkB,SAAS,EAAE;MAC9C,KAAI,CAACC,UAAU,GAAKF,MAAM;MAI1B;MACA;IAAA;EAEF;;EAEAG,UAAU;IACR,IAAI,CAACX,WAAW,GAAG,CAAC;EAEtB;CACH;AAlDYX,YAAY,eALxBF,SAAS,CAAC;EACTyB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACWzB,YAAY,CAkDxB;SAlDYA,YAAY","names":["Component","ethers","AppComponent","constructor","provider","providers","Web3Provider","window","ethereum","syncBlock","getBlock","then","block","blockNumber","number","transactions","handleAuth","console","log","enable","send","signer","getSigner","userWallet","clearBlock","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/austinramos/Documents/Workspace/Encode_Bootcamp/14_15_code/frontend/app/src/app/app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {ethers, Wallet} from 'ethers';\ndeclare let window: any\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  provider:  ethers.providers.Web3Provider;\n  blockNumber: number = 0;\n  transactions: string[] | undefined;\n  userWallet: ethers.Signer | undefined ;\n  userEthBalance: number | undefined;\n\n  constructor(){\n     //this.provider = ethers.getDefaultProvider('goerli');\n     this.provider = new ethers.providers.Web3Provider(window.ethereum);\n     \n     //setInterval(()=>{this.blockNumber +=1 })\n    }\n\n    syncBlock(){\n      //this.blockNumber = \"loading...\";\n    this.provider.getBlock(\"latest\").then(block=>{\n      this.blockNumber = block.number;\n      this.transactions = block.transactions;\n      \n    })\n    }\n\n    // createWallet(){\n    //   this.userWallet = ethers.Wallet.createRandom().connect(this.provider);\n    //   this.userWallet.getBalance().then(bal=>{\n    //     this.userEthBalance = parseFloat(ethers.utils.formatEther(bal));\n    //   })\n    // }\n\n    async handleAuth() {\n      console.log(\"HANDLE AUTH***\")\n      window.ethereum.enable()\n      this.provider.send(\"eth_requestAccounts\", [])\n      console.log(\"CONNECTED!\")\n      console.log(\"provider: \" , this.provider);\n      const signer = await this.provider.getSigner();\n      this.userWallet =   signer\n      \n      \n      \n      //const test = signer.connect(this.provider)\n      //console.log(\"Account:\", await signer.getAddress());\n\n    }\n\n    clearBlock(){\n      this.blockNumber = 1;\n    \n    }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}